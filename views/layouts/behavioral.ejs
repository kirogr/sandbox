<div class="container mx-auto p-5">
    <h1 class="text-xl font-bold mb-4">File Submission Details</h1>
    <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
        <p class="text-sm font-bold text-gray-700 mb-2">Filename: <%= submission.staticData.App.filename %></p>
        <p class="text-sm text-gray-700 mb-2">Size: <%= submission.staticData.App.size %></p>
        <p class="text-sm text-gray-700 mb-2">Type: <%= submission.staticData.App.extension %></p>
        <p class="text-sm text-gray-700 mb-2">Uploaded: <%= submission.staticData.App.createdAt %></p>
    </div>

    <h1 class="text-xl font-bold mb-4">Behavioral Analysis Setup</h1>
    <% if(snapshots.length > 0) { %>
    <form action="/api/create-snapshot?submission=<%= submission._id %>" method="POST"  class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4" onsubmit="handleSubmit(event)">
        <input type="hidden" name="submissionId" value="<%= submission._id %>"> <!-- Hidden input for submission ID -->
        <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="snapshot">
                Choose available snapshot
            </label>
            <select id="snapshot" name="snapshot" class="shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" onchange="updateSnapshotId()">
                <% for(var i = 0; i < snapshots.length; i++) { %>
                    <p><option value="<%= snapshots[i]._id %>"><%= snapshots[i].guestOS %> (<%= snapshots[i].virtualMachineId %>)</option></p>
                <% } %>
            </select>
        </div>
        <div class="mb-6">
            <label class="block text-gray-700 text-sm font-bold mb-2" for="timeout">
                Choose Timeout
            </label>
            <select id="timeout" name="timeout" class="shadow border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                <option value="60">1 minute</option>
                <option value="120">2 minutes</option>
                <option value="150">2.5 minutes</option>
                <option value="300" selected>5 minutes</option>
                <option value="600">10 minutes</option>
            </select>
        </div>
        <div class="flex items-center justify-between">
            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                Analyze to Sandbox
            </button>
        </div>
    </form>
    <% } else { %>
        <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 justify-center text-center">
            <div class="mb-4">
                <h2 class="text-lg">We're experiencing high demand, please try again later.</h2>
                <p>This error occurred due to insufficient sandbox virtual machines allotted for your use.</p>
            </div>
        </div>
    <% } %>
</div>


<script>
    function updateSnapshotId() {
        var selectElement = document.getElementById('snapshot');
        var snapshotIdInput = document.getElementById('snapshotId');
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        snapshotIdInput.value = selectedOption.value;
    }
    function handleSubmit(event) {
        event.preventDefault();

        var form = event.target;
        var formData = new FormData(form);

        var serializedFormData = [];
        for (var pair of formData.entries()) {
            serializedFormData.push(encodeURIComponent(pair[0]) + '=' + encodeURIComponent(pair[1]));
        }
        var encodedFormData = serializedFormData.join('&');

        // Make an AJAX request
        var xhr = new XMLHttpRequest();
        xhr.open(form.method, form.action, true);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.onreadystatechange = function () {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    loadCategoryData('behavioral-analysis');
                } else {
                    console.error("Error:", xhr.status);
                }
            }
        };
        xhr.send(encodedFormData);
    }
</script>